/** * @author Gabriel Bucknall * @since Apr 16, 2007 */ package com.pixelbreaker.motion{	import flash.events.EventDispatcher;		import com.pixelbreaker.events.AnimationEvent;			public class CallWait extends EventDispatcher implements IAnimate	{		// arguments		private var delay				:uint;		private var args				:Array;			// properties		private var time				:Number;				public var scope				:Object;		public var method				:Function;				// references		private var controller		:MotionControl;				private var _active			:Boolean = true;				public function CallWait( scope:Object, method:*, delay:Number, ...rest )		{			super();						// arguments			this.scope = scope;			this.method = method is String? scope[ method ] : method;			this.delay = delay || 0;			args = rest;//arguments.slice( 3, arguments.length );								// properties			time = 0;						// references			controller = MotionControl.getInstance();						start();		}			public function step():void		{			if( delay == 0 )			{				method.apply( scope, args );				controller.removeAnimation( this );								dispatchEvent( new AnimationEvent( AnimationEvent.COMPLETE ) );			}			else			{				delay--;			}		}			public function stop():void		{			controller.removeAnimation( this );		}			public function start():void		{			controller.addAnimation( this );		}			public function getTarget():Object		{			return {				scope: scope,				property: method				};		}			public function getDelay():uint		{			return delay;		}				public function getActive():Boolean		{			return _active;			}				public function setActive( value:Boolean ):void		{			_active = value;		}	}}